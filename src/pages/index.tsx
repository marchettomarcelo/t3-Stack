import { type NextPage } from "next";
import Head from "next/head";
import { signIn, signOut, useSession } from "next-auth/react";

import { trpc } from "../utils/trpc";
import { useState } from "react";
import Nota from "../components/nota";

const Home: NextPage = () => {
  const { data: sessionData } = useSession();
  

  const { data, refetch: refetchMsgs} = trpc.example.allMsgs.useQuery();
  const addi = trpc.example.addMsg.useMutation({
    onSuccess: () => {
      refetchMsgs()
    },
  });

  const deleteMessage = trpc.example.deleteMsg.useMutation({
    onSuccess: () => {
      refetchMsgs()
    },
  });

  const [formData, setFormData] = useState("oi");

  function handleSubmit() {
    addi.mutate({ msg: formData });
  }

  function handleDelete(e: any) {
    const idMessage: string = e.target.id;

    deleteMessage.mutate({
      id: idMessage,
    });
  }

  if (!sessionData) {
    return (
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-black no-underline transition hover:bg-white/20"
        onClick={() => signIn()}
      >
        {"Sign in"}
      </button>
    );
  } else {
    return (
      <>
        <Head>
          <title>Notes App</title>
          <meta name="description" content="Generated by create-t3-app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <main className="flex min-h-screen flex-col items-center justify-center gap-4 bg-gradient-to-b pt-10 ">
          <div className="flex w-9/12 flex-col">
            <p>Insira uma nota</p>
            <input
              className="w-full rounded-md border p-4 shadow-md"
              type="text"
              value={formData}
              onChange={(e) => setFormData(e.target.value)}
            />
          </div>
          <button
            className="rounded-md border-2 border-black p-4"
            onClick={handleSubmit}
          >
            Adicionar Nota
          </button>
          <div className="flex h-96 w-9/12 flex-col gap-4 overflow-y-scroll">
            {data &&
              data?.map((mensagem) => {
                return (
                 <Nota mensagem={mensagem} refetchMsgs={refetchMsgs}/>
                );
              })}
          </div>
          <button
            className="rounded-full bg-white/10 px-10 py-3 font-semibold text-black no-underline transition hover:bg-white/20"
            onClick={() => signOut()}
          >
            Sign out
          </button>
        </main>
      </>
    );
  }
};

export default Home;
